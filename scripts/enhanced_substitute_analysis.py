#!/usr/bin/env python3
"""
AN√ÅLISE EXPANDIDA DE SUBSTITUTOS: UNIVERSIDADES E ESTRAT√âGIAS COMERCIAIS
Complementa o mapa de substitutos com an√°lise aprofundada e estrat√©gias espec√≠ficas
"""

import pandas as pd
import numpy as np
import json
from datetime import datetime

class EnhancedSubstituteAnalyzer:
    def __init__(self):
        self.substitute_data = None

    def load_substitute_data(self):
        """Carrega dados da an√°lise de substitutos"""
        try:
            self.substitute_data = pd.read_csv('/home/danielfugisawa/pesquisa_prospect_gov/analysis/mapa_substitutos_edtech_idiomas.csv')
            print(f"‚úÖ Dados de substitutos carregados: {len(self.substitute_data)} √≥rg√£os")
            return True
        except Exception as e:
            print(f"‚ùå Erro ao carregar dados: {e}")
            return False

    def analyze_university_potential(self):
        """Analisa potencial espec√≠fico de universidades federais"""
        print("\nüéì AN√ÅLISE ESPEC√çFICA: UNIVERSIDADES FEDERAIS")
        print("=" * 50)

        # Perfis t√≠picos de universidades federais com necessidade de idiomas
        university_profiles = {
            "Universidades com Programas Internacionais": {
                "potential_investment": "R$ 500K - R$ 2M/ano",
                "key_drivers": [
                    "Programas de interc√¢mbio",
                    "Publica√ß√µes internacionais",
                    "Coopera√ß√£o t√©cnica internacional",
                    "Dupla diploma√ß√£o"
                ],
                "languages_needed": ["Ingl√™s", "Espanhol", "Franc√™s"],
                "migration_timeline": "Q1-Q2 2025",
                "value_proposition": "Capacita√ß√£o para pesquisa internacional e publica√ß√£o acad√™mica"
            },
            "Universidades T√©cnicas/Tecnol√≥gicas": {
                "potential_investment": "R$ 300K - R$ 1M/ano",
                "key_drivers": [
                    "Documenta√ß√£o t√©cnica internacional",
                    "Certifica√ß√µes internacionais",
                    "Pesquisa aplicada global",
                    "Parcerias com empresas multinacionais"
                ],
                "languages_needed": ["Ingl√™s t√©cnico", "Alem√£o"],
                "migration_timeline": "Q2-Q3 2025",
                "value_proposition": "Ingl√™s t√©cnico especializado para inova√ß√£o e pesquisa"
            },
            "Universidades de Medicina/Sa√∫de": {
                "potential_investment": "R$ 400K - R$ 1.5M/ano",
                "key_drivers": [
                    "Literatura m√©dica internacional",
                    "Confer√™ncias globais",
                    "Protocolos internacionais",
                    "Telemedicina"
                ],
                "languages_needed": ["Ingl√™s m√©dico", "Franc√™s"],
                "migration_timeline": "Q1-Q2 2025",
                "value_proposition": "Ingl√™s m√©dico para atualiza√ß√£o cient√≠fica global"
            }
        }

        return university_profiles

    def create_commercial_strategies(self):
        """Cria estrat√©gias comerciais espec√≠ficas por √≥rg√£o"""
        print("\nüíº ESTRAT√âGIAS COMERCIAIS ESPEC√çFICAS")
        print("=" * 40)

        if self.substitute_data is None:
            return None

        strategies = {}

        for _, row in self.substitute_data.iterrows():
            orgao = row['orgao']
            score = row['score_total']
            gasto_atual = row['total_gasto_edtech']
            timeline = row['timeline_provavel']

            strategy = {
                "prioridade": self._get_priority_level(score),
                "abordagem_inicial": self._get_initial_approach(orgao, score),
                "proposta_piloto": self._get_pilot_proposal(gasto_atual),
                "investimento_sugerido": self._get_suggested_investment(gasto_atual),
                "roi_projetado": self._calculate_projected_roi(gasto_atual),
                "timeline_negociacao": timeline,
                "stakeholders_chave": self._identify_key_stakeholders(orgao),
                "argumentos_principais": self._get_main_arguments(orgao),
                "diferenciais_competitivos": self._get_competitive_advantages(orgao)
            }

            strategies[orgao] = strategy

        return strategies

    def _get_priority_level(self, score):
        """Determina n√≠vel de prioridade"""
        if score >= 4.0:
            return "ALTA - Abordagem imediata"
        elif score >= 3.0:
            return "M√âDIA - Abordagem em Q2"
        else:
            return "BAIXA - Abordagem em Q4"

    def _get_initial_approach(self, orgao, score):
        """Define abordagem inicial"""
        if "Minist√©rio da Educa√ß√£o" in orgao:
            return "Apresenta√ß√£o executiva sobre moderniza√ß√£o da capacita√ß√£o digital"
        elif "FNDE" in orgao:
            return "Demonstra√ß√£o de ROI e casos de sucesso em educa√ß√£o"
        elif "CAPES" in orgao:
            return "Foco em ingl√™s acad√™mico e publica√ß√µes internacionais"
        else:
            return "Abordagem consultiva sobre necessidades espec√≠ficas"

    def _get_pilot_proposal(self, gasto_atual):
        """Prop√µe projeto piloto"""
        pilot_budget = gasto_atual * 0.1  # 10% do gasto atual
        return {
            "orcamento": f"R$ {pilot_budget:,.0f}",
            "duracao": "3-6 meses",
            "escopo": "50-100 servidores priorit√°rios",
            "m√©tricas": ["Engajamento", "Progresso lingu√≠stico", "Satisfa√ß√£o", "ROI"]
        }

    def _get_suggested_investment(self, gasto_atual):
        """Sugere investimento total"""
        suggested = gasto_atual * 0.25  # 25% do gasto EAD atual
        return f"R$ {suggested:,.0f}/ano (25% do or√ßamento EAD atual)"

    def _calculate_projected_roi(self, gasto_atual):
        """Calcula ROI projetado"""
        return {
            "redu√ß√£o_custos_treinamento": "20-30%",
            "melhoria_produtividade": "15-25%",
            "acesso_a_mercados_globais": "Incalcul√°vel",
            "tempo_de_retorno": "18-24 meses"
        }

    def _identify_key_stakeholders(self, orgao):
        """Identifica stakeholders chave"""
        if "Minist√©rio da Educa√ß√£o" in orgao:
            return ["Secret√°rio Executivo", "Diretoria de Tecnologia", "Coordena√ß√£o de Capacita√ß√£o"]
        elif "FNDE" in orgao:
            return ["Presid√™ncia", "Diretoria de Tecnologia", "Coordena√ß√£o Pedag√≥gica"]
        elif "CAPES" in orgao:
            return ["Presid√™ncia", "Diretoria de Avalia√ß√£o", "Coordena√ß√£o Internacional"]
        else:
            return ["Dire√ß√£o Geral", "TI", "Recursos Humanos"]

    def _get_main_arguments(self, orgao):
        """Define argumentos principais"""
        if "Educa√ß√£o" in orgao:
            return [
                "Alinhamento com diretrizes de internacionaliza√ß√£o da educa√ß√£o",
                "Capacita√ß√£o para coopera√ß√£o t√©cnica internacional",
                "Moderniza√ß√£o da forma√ß√£o de educadores",
                "Prepara√ß√£o para demandas globais da educa√ß√£o"
            ]
        elif "FNDE" in orgao:
            return [
                "Efici√™ncia na gest√£o de recursos educacionais",
                "Capacita√ß√£o para programas internacionais",
                "Melhoria na comunica√ß√£o com organismos multilaterais",
                "ROI superior comparado a EAD gen√©rico"
            ]
        elif "CAPES" in orgao:
            return [
                "Fortalecimento da p√≥s-gradua√ß√£o brasileira",
                "Aumento de publica√ß√µes em peri√≥dicos internacionais",
                "Melhoria na avalia√ß√£o de programas de p√≥s-gradua√ß√£o",
                "Facilitar interc√¢mbios e coopera√ß√£o acad√™mica"
            ]
        else:
            return [
                "Moderniza√ß√£o da capacita√ß√£o de servidores",
                "Prepara√ß√£o para desafios globais",
                "Melhoria na comunica√ß√£o institucional",
                "Otimiza√ß√£o de investimentos em educa√ß√£o"
            ]

    def _get_competitive_advantages(self, orgao):
        """Define diferenciais competitivos"""
        return [
            "Especializa√ß√£o vs generaliza√ß√£o",
            "Metodologia focada em resultados mensur√°veis",
            "Experi√™ncia comprovada no setor p√∫blico",
            "Suporte t√©cnico especializado",
            "Integra√ß√£o com plataformas existentes",
            "Certifica√ß√µes reconhecidas internacionalmente"
        ]

    def create_risk_mitigation_plan(self):
        """Cria plano de mitiga√ß√£o de riscos"""
        print("\n‚ö†Ô∏è PLANO DE MITIGA√á√ÉO DE RISCOS")
        print("=" * 35)

        risks = {
            "Resist√™ncia √† mudan√ßa": {
                "probabilidade": "M√©dia",
                "impacto": "Alto",
                "mitiga√ß√£o": [
                    "Demonstra√ß√µes pr√°ticas de benef√≠cios",
                    "Casos de sucesso em √≥rg√£os similares",
                    "Envolvimento de stakeholders desde o in√≠cio",
                    "Programa de change management"
                ]
            },
            "Restri√ß√µes or√ßament√°rias": {
                "probabilidade": "Alta",
                "impacto": "Alto",
                "mitiga√ß√£o": [
                    "Modelo de pagamento flex√≠vel",
                    "Demonstra√ß√£o clara de ROI",
                    "Proposta de realoca√ß√£o de recursos",
                    "Parcerias para financiamento"
                ]
            },
            "Concorr√™ncia de EAD gen√©rico": {
                "probabilidade": "M√©dia",
                "impacto": "M√©dio",
                "mitiga√ß√£o": [
                    "Diferencia√ß√£o clara de valor",
                    "Pre√ßo competitivo com melhor valor",
                    "Proposta de complementaridade",
                    "Foco em resultados espec√≠ficos"
                ]
            },
            "Mudan√ßas na gest√£o": {
                "probabilidade": "M√©dia",
                "impacto": "Alto",
                "mitiga√ß√£o": [
                    "Documenta√ß√£o de benef√≠cios",
                    "M√∫ltiplos pontos de contato",
                    "Contratos de longo prazo",
                    "Alinhamento com pol√≠ticas p√∫blicas"
                ]
            }
        }

        return risks

    def generate_implementation_roadmap(self):
        """Gera roadmap detalhado de implementa√ß√£o"""
        print("\nüìÖ ROADMAP DE IMPLEMENTA√á√ÉO DETALHADO")
        print("=" * 45)

        roadmap = {
            "Q1 2025 - Prepara√ß√£o & Prospec√ß√£o": {
                "semana_1-2": [
                    "Valida√ß√£o de dados com pesquisa prim√°ria",
                    "Desenvolvimento de materiais comerciais",
                    "Treinamento da equipe de vendas"
                ],
                "semana_3-4": [
                    "Agendamento com Minist√©rio da Educa√ß√£o",
                    "Prepara√ß√£o de proposta customizada",
                    "Benchmark competitivo detalhado"
                ],
                "semana_5-8": [
                    "Apresenta√ß√µes executivas",
                    "Negocia√ß√£o de piloto",
                    "Defini√ß√£o de m√©tricas de sucesso"
                ],
                "semana_9-12": [
                    "Implementa√ß√£o de piloto",
                    "Acompanhamento e ajustes",
                    "Documenta√ß√£o de resultados"
                ]
            },
            "Q2 2025 - Expans√£o": {
                "m√™s_1": [
                    "Abordagem FNDE com casos de sucesso",
                    "Proposta baseada em ROI comprovado",
                    "Negocia√ß√£o comercial"
                ],
                "m√™s_2": [
                    "Implementa√ß√£o FNDE",
                    "Refinamento da proposta de valor",
                    "Desenvolvimento de parcerias"
                ],
                "m√™s_3": [
                    "An√°lise de resultados consolidados",
                    "Prepara√ß√£o para expans√£o Q3",
                    "Otimiza√ß√£o de processos"
                ]
            },
            "Q3-Q4 2025 - Consolida√ß√£o": {
                "objetivos": [
                    "Abordagem CAPES e outros √≥rg√£os menores",
                    "Padroniza√ß√£o da oferta",
                    "Escalabilidade da opera√ß√£o",
                    "Planejamento para 2026"
                ]
            }
        }

        return roadmap

    def calculate_financial_projections(self):
        """Calcula proje√ß√µes financeiras detalhadas"""
        print("\nüí∞ PROJE√á√ïES FINANCEIRAS DETALHADAS")
        print("=" * 40)

        # Cen√°rios conservador, realista e otimista
        scenarios = {
            "Conservador (30% convers√£o)": {
                "q1_2025": 864000,  # 30% de R$ 2.88M (MEC)
                "q2_2025": 1030500,  # + 30% de R$ 555K (FNDE)
                "q4_2025": 1118700,  # + 30% de R$ 294K (CAPES)
                "total_anual": 1118700,
                "crescimento_anual": "15%"
            },
            "Realista (50% convers√£o)": {
                "q1_2025": 1440000,  # 50% de R$ 2.88M
                "q2_2025": 1717500,  # + 50% de R$ 555K
                "q4_2025": 1864500,  # + 50% de R$ 294K
                "total_anual": 1864500,
                "crescimento_anual": "25%"
            },
            "Otimista (70% convers√£o)": {
                "q1_2025": 2016000,  # 70% de R$ 2.88M
                "q2_2025": 2404500,  # + 70% de R$ 555K
                "q4_2025": 2610300,  # + 70% de R$ 294K
                "total_anual": 2610300,
                "crescimento_anual": "35%"
            }
        }

        return scenarios

    def save_enhanced_analysis(self, university_profiles, strategies, risks, roadmap, financial_projections):
        """Salva an√°lise expandida"""
        print("\nüíæ SALVANDO AN√ÅLISE EXPANDIDA")
        print("=" * 30)

        # Salvar perfis de universidades
        with open('/home/danielfugisawa/pesquisa_prospect_gov/analysis/university_profiles.json', 'w', encoding='utf-8') as f:
            json.dump(university_profiles, f, ensure_ascii=False, indent=2)

        # Salvar estrat√©gias comerciais
        with open('/home/danielfugisawa/pesquisa_prospect_gov/analysis/commercial_strategies.json', 'w', encoding='utf-8') as f:
            json.dump(strategies, f, ensure_ascii=False, indent=2)

        # Salvar plano de riscos
        with open('/home/danielfugisawa/pesquisa_prospect_gov/analysis/risk_mitigation.json', 'w', encoding='utf-8') as f:
            json.dump(risks, f, ensure_ascii=False, indent=2)

        # Salvar roadmap
        with open('/home/danielfugisawa/pesquisa_prospect_gov/analysis/implementation_roadmap.json', 'w', encoding='utf-8') as f:
            json.dump(roadmap, f, ensure_ascii=False, indent=2)

        # Salvar proje√ß√µes financeiras
        with open('/home/danielfugisawa/pesquisa_prospect_gov/analysis/financial_projections.json', 'w', encoding='utf-8') as f:
            json.dump(financial_projections, f, ensure_ascii=False, indent=2)

        # Criar relat√≥rio executivo expandido
        self.create_executive_summary(university_profiles, strategies, financial_projections)

        print("‚úÖ An√°lise expandida salva com sucesso")

    def create_executive_summary(self, university_profiles, strategies, financial_projections):
        """Cria resumo executivo expandido"""

        realista = financial_projections["Realista (50% convers√£o)"]

        summary = f"""
# MAPA DE SUBSTITUTOS - AN√ÅLISE EXPANDIDA
## Estrat√©gia Comercial & Proje√ß√µes Financeiras

### üéØ OPORTUNIDADE DE MERCADO

**MERCADO IDENTIFICADO:**
- 3 √≥rg√£os priorit√°rios com R$ 12,4M em EAD gen√©rico
- Potencial de substitui√ß√£o: R$ 3,7M (30% estimado)
- Cen√°rio realista: R$ {realista['total_anual']:,.0f}/ano

### üíº ESTRAT√âGIA COMERCIAL PRIORIT√ÅRIA

**MINIST√âRIO DA EDUCA√á√ÉO (Prioridade #1):**
- Score: 4.2/5.0 | Timeline: Q1 2025
- Investimento atual EAD: R$ 9,6M
- Potencial idiomas: R$ 2,88M
- Abordagem: Apresenta√ß√£o executiva sobre moderniza√ß√£o

**FNDE (Prioridade #2):**
- Score: 3.4/5.0 | Timeline: Q2 2025
- Investimento atual EAD: R$ 1,85M
- Potencial idiomas: R$ 555K
- Abordagem: ROI e casos de sucesso

**CAPES (Prioridade #3):**
- Score: 1.6/5.0 | Timeline: Q4 2025
- Investimento atual EAD: R$ 980K
- Potencial idiomas: R$ 294K
- Abordagem: Ingl√™s acad√™mico e publica√ß√µes

### üìä PROJE√á√ïES FINANCEIRAS (Cen√°rio Realista)

| Trimestre | Receita Acumulada | Convers√£o |
|-----------|-------------------|-----------|
| Q1 2025   | R$ {realista['q1_2025']:,.0f} | MEC (50%) |
| Q2 2025   | R$ {realista['q2_2025']:,.0f} | +FNDE (50%) |
| Q4 2025   | R$ {realista['q4_2025']:,.0f} | +CAPES (50%) |

**Crescimento anual projetado:** {realista['crescimento_anual']}

### üéì EXPANS√ÉO PARA UNIVERSIDADES FEDERAIS

**Perfis de Alto Potencial:**
1. **Universidades com Programas Internacionais**
   - Potencial: R$ 500K - R$ 2M/ano
   - Foco: Interc√¢mbio e publica√ß√µes internacionais

2. **Universidades T√©cnicas/Tecnol√≥gicas**
   - Potencial: R$ 300K - R$ 1M/ano
   - Foco: Ingl√™s t√©cnico e certifica√ß√µes

3. **Universidades de Medicina/Sa√∫de**
   - Potencial: R$ 400K - R$ 1,5M/ano
   - Foco: Literatura m√©dica internacional

### ‚ö° A√á√ïES IMEDIATAS (Pr√≥ximos 30 dias)

1. **Valida√ß√£o de dados** - Confirmar investimentos atuais
2. **Desenvolvimento de materiais** - Propostas customizadas
3. **Agendamento estrat√©gico** - Reuni√µes com tomadores de decis√£o
4. **Prepara√ß√£o de piloto** - Estrutura para valida√ß√£o r√°pida

### üèÜ DIFERENCIAIS COMPETITIVOS

- **Especializa√ß√£o** vs generaliza√ß√£o do EAD atual
- **ROI mensur√°vel** em compet√™ncias lingu√≠sticas
- **Metodologia comprovada** para setor p√∫blico
- **Certifica√ß√µes internacionais** reconhecidas

### ‚ö†Ô∏è RISCOS E MITIGA√á√ïES

**Principais Riscos:**
- Resist√™ncia √† mudan√ßa (Mitiga√ß√£o: Casos de sucesso)
- Restri√ß√µes or√ßament√°rias (Mitiga√ß√£o: ROI claro)
- Concorr√™ncia EAD (Mitiga√ß√£o: Diferencia√ß√£o de valor)

### üìà POTENCIAL DE EXPANS√ÉO 2026

Com base nos sucessos de 2025:
- **Universidades Federais:** +20-30 institui√ß√µes
- **√ìrg√£os Estaduais:** Replica√ß√£o do modelo
- **Mercado Potencial Total:** R$ 15-25M

---
*An√°lise estrat√©gica - {datetime.now().strftime('%Y-%m-%d')}*
"""

        with open('/home/danielfugisawa/pesquisa_prospect_gov/analysis/executive_summary_expanded.md', 'w', encoding='utf-8') as f:
            f.write(summary)

def main():
    """Fun√ß√£o principal da an√°lise expandida"""
    print("üöÄ AN√ÅLISE EXPANDIDA DE SUBSTITUTOS")
    print("=" * 40)

    analyzer = EnhancedSubstituteAnalyzer()

    # Carregar dados
    if not analyzer.load_substitute_data():
        return

    # Executar an√°lises
    university_profiles = analyzer.analyze_university_potential()
    strategies = analyzer.create_commercial_strategies()
    risks = analyzer.create_risk_mitigation_plan()
    roadmap = analyzer.generate_implementation_roadmap()
    financial_projections = analyzer.calculate_financial_projections()

    # Salvar resultados
    analyzer.save_enhanced_analysis(
        university_profiles,
        strategies,
        risks,
        roadmap,
        financial_projections
    )

    print("\n‚úÖ AN√ÅLISE EXPANDIDA CONCLU√çDA!")
    print("üìÅ Arquivos gerados:")
    print("   - university_profiles.json")
    print("   - commercial_strategies.json")
    print("   - risk_mitigation.json")
    print("   - implementation_roadmap.json")
    print("   - financial_projections.json")
    print("   - executive_summary_expanded.md")

if __name__ == "__main__":
    main()